@page "/LaunchCM"
@inject HttpClient Http;
@inject NavigationManager navmgr;
@inject IJSRuntime JSRuntime;

<h1>Launch A Rep Set and Register with Cloud Manager</h1>

<br />
@if(!isLoading) {
    <label for="txt_pw">Validation Password</label>
    <input id="txt_pw" type="text" @bind="txt_pw" @bind:event="onchange" placeholder="password" class="form-control form-control-lg" />
    <br />
    <label for="txt_rscount">Replica Set Count</label>
    <input id="txt_rscount" type="text" @bind="txt_count" @bind:event="onchange" class="form-control form-control-lg" />
    <br />
    <label for="txt_expire">Expire On Date</label>
    <input id="txt_expire" type="text" @bind="txt_expire" @bind:event="onchange" class="form-control form-control-lg" />
    <br />
    <button class="btn btn-primary btn-lg" @onclick="LaunchIt">Launch a RepSet</button>
} else {
    <button class="btn btn-primary btn-lg" disabled><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span> Launching...</button>
}

@code {
    private Resp r = null;
    private string txt_name = "";
    private string txt_pw="";
    private string txt_count="3";
    private string txt_expire = "";
    private bool isLoading = false;

    private async void LaunchIt()
    {
        isLoading = true;
        string userid = await JSRuntime.InvokeAsync<string>("getCurrentUserName");
        userid = userid.Replace(" ", ".").ToLower();
        
        try{
            r = await Http.GetFromJsonAsync<Resp>("/api/launchcm/"+userid+"?password="+txt_pw+"&count="+txt_count+"&expire="+txt_expire);
            Console.WriteLine(r.ToString());
        } catch (Exception ex) {
            Console.WriteLine(ex.ToString());
        }
        
        isLoading = false;
        navmgr.NavigateTo("/Watch/"+userid+"_cm", false);
    }

    protected override async Task OnInitializedAsync()
    {
        txt_count = "3";
        txt_expire = DateTime.Now.ToString("yyyy-MM-dd");
    }

    public class Resp {
        public string name { get; set; }
    }

}
